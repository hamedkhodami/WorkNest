# Generated by Django 5.2.1 on 2025-05-16 18:22

import apps.account.models
import apps.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='IR', unique=True, verbose_name='Phone number')),
                ('email', models.EmailField(blank=True, max_length=225, null=True, verbose_name='Email')),
                ('first_name', models.CharField(blank=True, default='No Name', max_length=128, null=True, validators=[apps.core.validators.OnlyPersianCharsValidator], verbose_name='First name')),
                ('last_name', models.CharField(blank=True, default='No Name', max_length=128, null=True, validators=[apps.core.validators.OnlyPersianCharsValidator], verbose_name='Last name')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('project_admin', 'Project admin'), ('project_member', 'Project member'), ('viewer', 'Viewer')], default='viewer', max_length=20, verbose_name='Role')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Date time field')),
                ('referral_code', models.CharField(default=apps.account.models.generate_referral, max_length=8, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_blocked_by_admin', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blocked User',
                'verbose_name_plural': 'Blocked Users',
            },
        ),
        migrations.CreateModel(
            name='UserProfileModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female')], max_length=10, null=True, verbose_name='Gender')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Bio')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/profiles/', verbose_name='Picture')),
                ('degree', models.CharField(blank=True, max_length=128, null=True, verbose_name='Degree')),
                ('city', models.CharField(blank=True, max_length=64, null=True, verbose_name='City')),
                ('skills', models.TextField(blank=True, null=True, verbose_name='Skills')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User profile',
                'verbose_name_plural': 'Users profile',
            },
        ),
    ]
